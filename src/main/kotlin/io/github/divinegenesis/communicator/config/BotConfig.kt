package io.github.divinegenesis.communicator.config

import org.spongepowered.configurate.objectmapping.ConfigSerializable
import org.spongepowered.configurate.objectmapping.meta.Comment
import org.spongepowered.configurate.objectmapping.meta.Setting

@ConfigSerializable
data class BotConfig(

    val mainConfiguration: MainConfiguration = MainConfiguration(),

    val databaseConfig: DatabaseConfig = DatabaseConfig(),

    val authorizationConfig: AuthorizationConfig = AuthorizationConfig(),

    @Setting("Authorized-Bots")
    @Comment("This should be the bots UserID, for example Dyno's UserID is \"155149108183695360\"")
    val authorizedBotList: List<String> = listOf(""),

    )

@ConfigSerializable
data class MainConfiguration(

    @Setting("GuildID")
    val guildID: String = "",

    @Setting("OwnerID")
    val ownerID: String = "",

    val debugChannel: String = "",

    val botToken: String = ""

)

@ConfigSerializable
data class AuthorizationConfig(

    @Setting("Emote-Verification-ID")
    @Comment("The ID of the emote users will click to be verified")
    val emoteID: String = "",

    @Setting("Channel-Verification-ID")
    @Comment("The channel ID of where to listen for the emote")
    val channelID: String = "",

    @Setting("Channel-Verify-ID")
    @Comment("The channel id where verification is sent to")
    val verificationID: String = "",

    @Setting("Message-ID")
    @Comment("The message ID, used for removing a users emote if they leave")
    val messageID: String = "",

    @Comment("Currently limited to 3 entries. Additional entries will be ignored.")
    val questions: List<String> = listOf(
        """
        *First of all: Thank you for being so kind to take the time for us, your dedication will not go unnoticed!*
        **1. Can you try to explain our Rule and Etiquette in your own words?**
        *The Rule stands for having to use your common sense at best of your ability & the Etiquette expects of you to do your best at being a good person.*
    """.trimIndent(),
        """
        **2. Have you checked and do you agree with the Fact?**
        *Agreeing to this fact means you understand and accept that other users may for example: create content by using the activity that is generated by you.*
    """.trimIndent(),
        "**3. What is the password?**"
    ),

    val password: String = "",

    @Setting("Role-Special-ID")
    @Comment("The ID of the special role a user receives from getting the password correct")
    val specialRoleID: String = "",

    @Setting("Role-Regular-ID")
    @Comment("The ID of the regular role a user receives when approved")
    val regularRoleID: String = "",

    @Setting("Emote-Approval-ID")
    val approveEmote: String = "",

    @Setting("Emote-Deny-Id")
    val denyEmote: String = "",

    )

@ConfigSerializable
data class DatabaseConfig(

    @Setting("Database-Host")
    val host: String = "localhost",

    @Setting("Database-Port")
    val port: String = "3306",

    @Setting("Database-Name")
    val dbName: String = "",

    @Setting("Username")
    val dbUsername: String = "",

    @Setting("Password")
    val dbPassword: String = "",
)